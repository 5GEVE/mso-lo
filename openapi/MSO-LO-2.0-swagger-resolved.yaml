openapi: 3.0.0
info:
  title: 5G-EVE Adaptation Layer API
  description: 5G-EVE Adaptation Layer API spec.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "2.0"
servers:
- url: /api
  description: SwaggerHub API Auto Mocking
tags:
- name: Local NFVO
  description: Local NFVO information
- name: NS instances
  description: Network Service instance management
- name: NS Subscriptions
  description: Subscriptions to notifications about NS instances status
- name: Notification send
  description: Operations for sending notifications to subscribed clients
paths:
  /nfvo:
    get:
      tags:
      - Local NFVO
      summary: Retrieve list of local NFVO.
      description: |
        By passing in the appropriate options, you can search for
        available Local Orchestrators
      operationId: NFVO.fetch
      parameters:
      - name: NFVO parameters
        in: query
        description: nfvo identifier
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/NFVO parameters'
      - name: Pagination parameters
        in: query
        description: The parameters are used to create pagination
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Pagination parameters'
      responses:
        200:
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NFVO'
        400:
          description: The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - bearerAuthentication: []
  /nfvo/{nfvoId}:
    get:
      tags:
      - Local NFVO
      summary: Read an individual NFVO.
      description: |
        By passing in the appropriate options, you can search for
        available Local Orchestrators
      operationId: NFVO.getById
      parameters:
      - name: nfvoId
        in: path
        description: Identifier of a Nfvo
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: NFVO found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NFVO'
        400:
          description: The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized, Invalid credentials (client or user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - bearerAuthentication: []
  /nfvo/{nfvoId}/ns_instances:
    get:
      tags:
      - NS instances
      summary: Retrieve list of NS instances.
      description: |
        This operation allows to retrieve the list of NS from a specific Nfvo
      operationId: Nfvo.NS.list
      parameters:
      - name: nfvoId
        in: path
        description: Identifier of a Nfvo
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Pagination parameters
        in: query
        description: The parameters are used to create pagination
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Pagination parameters'
      responses:
        200:
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NsInstance'
        400:
          description: The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized, Invalid credentials (client or user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - bearerAuthentication: []
    post:
      tags:
      - NS instances
      summary: Create a new NS instance ID.
      description: Creates and returns a Network Service identifier (nsId) in a Nfvo
      operationId: Nfvo.NS.onboard
      parameters:
      - name: nfvoId
        in: path
        description: Identifier of a Nfvo
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateNSRequestBody'
      responses:
        201:
          description: |
            201 Created
            A NS Instance identifier has been created successfully. The response body shall contain a representation of the created NS instance, as defined in clause 6.5.2.8. The HTTP response shall include a "Location" HTTP header that contains the resource URI of the created NS instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NsInstance'
        400:
          description: The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized, Invalid credentials (client or user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - bearerAuthentication: []
  /nfvo/{nfvoId}/ns_instances/{nsInstanceId}:
    get:
      tags:
      - NS instances
      summary: Read an individual NS instance resource.
      description: |
        This operation allows to retrieve an existing NS from a specific Nfvo.
      operationId: Nfvo.NS.fetch
      parameters:
      - name: nsInstanceId
        in: path
        description: Identifier of the network service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nfvoId
        in: path
        description: Identifier of a Nfvo
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: NS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NsInstance'
        400:
          description: The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized, Invalid credentials (client or user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - bearerAuthentication: []
    delete:
      tags:
      - NS instances
      summary: Delete an individual NS instance resource.
      description: |
        Delete an individual NS instance resource.
      operationId: Nfvo.NS.terminate
      parameters:
      - name: nsInstanceId
        in: path
        description: Identifier of the network service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nfvoId
        in: path
        description: Identifier of a Nfvo
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        204:
          description: |
            204 No Content The NS instance resource and the associated NS identifier were deleted successfully. The response body shall be empty.
        400:
          description: The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized, Invalid credentials (client or user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - bearerAuthentication: []
  /nfvo/{nfvoId}/ns_instance/{nsInstanceId}/instantiate:
    post:
      tags:
      - NS instances
      summary: Instantiate a NS instance.
      description: |
        Instantiate a NS. The precondition is that the NS instance must have
        been created and must be in NOT_INSTANTIATED state. As a result of the
        success of this operation, the NFVO creates a "NS Lifecycle Operation
        Occurrence" resource for the request, and the NS instance state becomes
        INSTANTIATED.
      operationId: Nfvo.NS.instantiate
      parameters:
      - name: nsInstanceId
        in: path
        description: Identifier of the network service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nfvoId
        in: path
        description: Identifier of a Nfvo
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/InstantiateNsRequest'
      responses:
        202:
          description: |
            202 ACCEPTED
        400:
          description: The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized, Invalid credentials (client or user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - bearerAuthentication: []
  /nfvo/{nfvoId}/ns_instances/{nsInstanceId}/scale:
    post:
      tags:
      - NS instances
      summary: Scale NS instance.
      description: |
        Scale a NS instance. The precondition is that the NS instance must have
        been created and must be in INSTANTIATED state. As a result of the
        success of this operation, the NFVO creates a "NS Lifecycle Operation
        Occurrence" resource for the request, and the NS instance state remains
        INSTANTIATED.
      operationId: Nfvo.NS.scale
      parameters:
      - name: nsInstanceId
        in: path
        description: Identifier of the network service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nfvoId
        in: path
        description: Identifier of a Nfvo
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ScaleNSRequestBody'
      responses:
        202:
          description: |
            202 ACCEPTED
        400:
          description: The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized, Invalid credentials (client or user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - bearerAuthentication: []
  /nfvo/{nfvoId}/ns_instance/{nsInstanceId}/terminate:
    post:
      tags:
      - NS instances
      summary: Terminate a NS instance.
      description: |
        Terminate NS task.   The POST method terminates a NS instance. This method can only be  used with a NS instance in the INSTANTIATED state. Terminating a NS instance does not delete the NS instance identifier,  but rather transitions the NS into the NOT_INSTANTIATED state.
      operationId: terminateNSinstance
      parameters:
      - name: nsInstanceId
        in: path
        description: Identifier of the network service
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nfvoId
        in: path
        description: Identifier of a Nfvo
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TerminateNsRequest'
      responses:
        202:
          description: |
            202 ACCEPTED
        400:
          description: The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized, Invalid credentials (client or user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - bearerAuth: []
  /nfvo/{nfvoId}/subscriptions:
    get:
      tags:
      - NS Subscriptions
      summary: Query multiple subscriptions.
      description: |
        Query Subscription Information.
        The GET method queries the list of active subscriptions of the functional block that invokes the method. It can be used e.g. for resynchronization after error situations.
      parameters:
      - name: nfvoId
        in: path
        description: Identifier of a Nfvo
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: filter
        in: query
        description: |
          Attribute-based filtering expression according to clause 5.2 of ETSI GS NFV SOL 013. The NFVO shall support receiving this parameter as part of the URI query string. The OSS/BSS may supply this parameter. All attribute names that appear in the LccnSubscription and in data types  referenced from it shall be supported by the NFVO in the filter expression.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: |
            200 OK
            The list of subscriptions has been queried successfully. The response body shall contain the representations of all active  subscriptions of the functional block that invokes the method. If the NFVO supports alternative 2 (paging) according to  clause 5.4.2.1 of ETSI GS NFV SOL 013 for this resource, inclusion of the Link HTTP header in this response shall follow the provisions in clause 5.4.2.3 of ETSI GS NFV SOL 013.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NSInstanceSubscription'
        400:
          description: The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized, Invalid credentials (client or user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - NS Subscriptions
      summary: Subscribe to NS lifecycle change notifications.
      description: |
        The POST method creates a new subscription. If subscription already exists, it returns a "303 See Other" response code referencing the existing subscription resource.
      parameters:
      - name: nfvoId
        in: path
        description: Identifier of a Nfvo
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/SubscribeNotificationNSRequestBody'
      responses:
        201:
          description: "201 Created. The subscription has been created successfully.\
            \            \n"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NSInstanceSubscription'
        303:
          description: "303 See Other. The subscription already exists.          \
            \  \n"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NSInstanceSubscription'
        400:
          description: The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized, Invalid credentials (client or user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /nfvo/{nfvoId}/subscriptions/{subscriptionId}:
    get:
      tags:
      - NS Subscriptions
      summary: Read an individual subscription resource.
      description: |
        The GET method retrieves information about a subscription by reading an individual subscription resource. This method shall support the URI query parameters, request and response data structures, and response codes, as specified in the Tables 6.4.17.3.2-1 and 6.4.17.3.2-2
      parameters:
      - name: nfvoId
        in: path
        description: Identifier of a Nfvo
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionId
        in: path
        description: |
          Identifier of this subscription.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: |
            200 OK. The operation has completed successfully. The response body shall contain a representation of the subscription resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NSInstanceSubscription'
        400:
          description: The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized, Invalid credentials (client or user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - NS Subscriptions
      summary: Terminate a subscription.
      description: |
        The DELETE method terminates an individual subscription. This method shall support the URI query parameters, request and response data structures, and response codes, as specified in the Tables 6.4.17.3.5-1 and 6.4.17.3.5-2.
      parameters:
      - name: nfvoId
        in: path
        description: Identifier of a Nfvo
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionId
        in: path
        description: |
          Identifier of this subscription.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        204:
          description: |
            204 NO CONTENT. The subscription resource has been deleted successfully. The response body shall be empty.
        400:
          description: The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized, Invalid credentials (client or user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /URI_is_provided_by_the_client_when_creating_the_subscription-NsIdentifierCreationNotification:
    get:
      tags:
      - Notification send
      summary: Test the notification endpoint.
      description: |
        Query NS Instances.
        The GET method queries information about multiple NS instances. This method shall support the URI query parameters, request and response data structures, and response codes, as specified in the Tables 6.4.2.3.2-1 and 6.4.2.3.2-2.
      responses:
        204:
          description: |
            204 No Content
            Shall be returned when the notification endpoint has been tested successfully. The response body shall be empty.
        400:
          description: The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized, Invalid credentials (client or user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Notification send
      summary: Notify about NS creation
      description: |
        The POST method delivers a notification from the server to the client. This method shall support the URI query parameters, request and response data structures, and response codes, as specified in the Tables 6.4.18.3.1-1 and 6.4.18.3.1-2.
      requestBody:
        description: |
          A notification about the creation of a NS identifier and the related NS instance resource.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        204:
          description: |
            204 No Content
            Shall be returned when the notification has been delivered successfully.
        400:
          description: The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized, Invalid credentials (client or user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /URI_is_provided_by_the_client_when_creating_the_subscription-NsIdentifierDeletionNotification:
    get:
      tags:
      - Notification send
      summary: Test the notification endpoint.
      description: |
        Query NS Instances.
        The GET method queries information about multiple NS instances. This method shall support the URI query parameters, request and response data structures, and response codes, as specified in the Tables 6.4.2.3.2-1 and 6.4.2.3.2-2.
      responses:
        204:
          description: |
            204 No Content
            Shall be returned when the notification endpoint has been tested successfully. The response body shall be empty.
        400:
          description: The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized, Invalid credentials (client or user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
      - Notification send
      summary: Notify about NS lifecycle change
      description: |
        The POST method delivers a notification from the server to the client. This method shall support the URI query parameters, request and response data structures, and response codes, as specified in the Tables 6.4.18.3.1-1 and 6.4.18.3.1-2.
      requestBody:
        description: |
          A notification about the deletion of a NS identifier and the related NS instance resource.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_1'
        required: true
      responses:
        204:
          description: |
            204 No Content Shall be returned when the notification has been delivered successfully.
        400:
          description: The request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized, Invalid credentials (client or user)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    NFVO:
      required:
      - id
      - name
      - site
      - type
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: OSM-Turin
        type:
          type: string
          example: OSM
        site:
          type: string
          example: ITALY_TURIN
        uri:
          type: string
          format: url
          example: https://osm-turin.5g-eve.eu
        createdAt:
          type: string
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        updatedAt:
          type: string
          format: date-time
          example: 2016-08-29T09:12:33.001Z
    NsInstance:
      required:
      - id
      - nsInstanceDescription
      - nsInstanceName
      - nsState
      - nsdId
      - nsdInfoId
      type: object
      properties:
        id:
          type: string
          description: Identifier of the NS instance.
          format: uuid
        nsInstanceName:
          type: string
          description: Human readable name of the NS instance.
        nsInstanceDescription:
          type: string
          description: Human readable description of the NS instance.
        nsdId:
          type: string
          description: Identifier of the NSD on which the NS instance is based.
          format: uuid
        flavourId:
          type: string
          description: |
            Identifier of the NS deployment flavour applied to the NS instance.
            This attribute shall be present if the nsState attribute value is
            INSTANTIATED.
        vnfInstance:
          type: array
          description: |
            Information on constituent VNF(s) of the NS instance. If the
            "nsState" attribute is INSTANTIATED, at least either one
            "vnfInstance" attribute or one "nestedNsInstanceId" attribute shall
            be present.
          items:
            $ref: '#/components/schemas/VnfInstance'
        pnfInfo:
          type: array
          description: |
            Information on the PNF(s) that are part of the NS instance.
          items:
            $ref: '#/components/schemas/PnfInfo'
        virtualLinkInfo:
          type: array
          description: |
            Information on the VL(s) of the NS instance. This attribute shall
            be present if the nsState attribute value is INSTANTIATED and if
            the NS instance has specified connectivity.
          items:
            $ref: '#/components/schemas/NsVirtualLinkInfo'
        vnffgInfo:
          type: array
          description: |
            Information on the VNFFG(s) of the NS instance.
          items:
            $ref: '#/components/schemas/VnffgInfo'
        sapInfo:
          type: array
          description: |
            Information on the SAP(s) of the NS instance.
          items:
            $ref: '#/components/schemas/SapInfo'
        nestedNsInstanceId:
          type: array
          description: |
            Identifier of the nested NS(s) of the NS instance. If the "nsState"
            attribute is INSTANTIATED, at least either one "vnfInstance"
            attribute or one "nestedNsInstanceId" attribute shall be present.
          items:
            type: string
            format: uuid
        nsState:
          $ref: '#/components/schemas/NsStateType'
        monitoringParameter:
          type: array
          description: |
            Performance metrics tracked by the NFVO (e.g. for auto-scaling purposes) as identified by the NS designer in the NSD.
          items:
            $ref: '#/components/schemas/NsInstance_monitoringParameter'
        nsScaleStatus:
          type: array
          description: |
            Status of each NS scaling aspect declared in the applicable DF,
            how "big" the NS instance has been scaled w.r.t. that aspect. This
            attribute shall be present if the nsState attribute value is
            INSTANTIATED.
          items:
            $ref: '#/components/schemas/NsScaleInfo'
        additionalAffinityOrAntiAffinityRule:
          type: array
          description: |
            Information on the additional affinity or anti-affinity rule from
            NS instantiation operation. Shall not conflict with rules already
            specified in the NSD.
          items:
            $ref: '#/components/schemas/AffinityOrAntiAffinityRule'
    NsStateType:
      type: string
      description: "State of the NS instance. Permitted values:\n * `NOT_INSTANTIATED`:\
        \ The NS instance is terminated or not instantiated.\n * `INSTANTIATED`: The\
        \ NS instance is instantiated.\n \n"
      enum:
      - NOT_INSTANTIATED
      - INSTANTIATED
    VnfInstance:
      type: object
      additionalProperties: true
    PnfInfo:
      type: object
      additionalProperties: true
    NsVirtualLinkInfo:
      type: object
      additionalProperties: true
    VnffgInfo:
      type: object
      additionalProperties: true
    SapInfo:
      type: object
      additionalProperties: true
    NsScaleInfo:
      type: object
      additionalProperties: true
    AffinityOrAntiAffinityRule:
      type: object
      additionalProperties: true
    InstantiateNsRequest:
      required:
      - nsFlavourId
      type: object
      properties:
        nsFlavourId:
          type: string
          description: Identifier of the NS deployment flavour to be instantiated.
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: human-readable  (es. 'PageNotFound', 'BadArguments')
        message:
          type: string
        target:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponse_details'
      description: Error rappresentation
    TerminateNsRequest:
      type: object
      properties:
        terminationTime:
          type: string
          description: |
            Timestamp indicating the end time of the NS, i.e. the NS will be terminated
            automatically at this timestamp. Cardinality "0" indicates the NS termination
            takes place immediately.
          format: date-time
    NSInstanceSubscription:
      required:
      - callbackUri
      - id
      type: object
      properties:
        id:
          type: string
          description: |
            An identifier with the intention of being globally unique.
        filter:
          $ref: '#/components/schemas/NSInstanceSubscription_filter'
        callbackUri:
          type: string
          description: |
            String formatted according to IETF RFC 3986.
          format: uri
    nsInstanceSubscriptionFilter:
      type: object
      properties:
        nsInstanceIds:
          type: array
          description: |
            If present, match NS instances with an instance identifier listed in this attribute.
          items:
            type: string
            description: |
              An identifier with the intention of being globally unique.
      description: |
        This type represents subscription filter criteria to match NS instances.
    NFVO parameters:
      type: object
      properties:
        nfvo_id:
          type: integer
          description: nfvo identifier
    Pagination parameters:
      type: object
      properties:
        offset:
          type: integer
          description: FROM pagination
        limit:
          type: integer
          description: COUNT pagination
    body:
      required:
      - nsInstanceId
      - subscriptionId
      type: object
      properties:
        notificationType:
          type: string
          description: |
            Discriminator for the different notification types. Shall be set to "NsIdentifierCreationNotification" for this notification type.
          example: NsIdentifierCreationNotification
        subscriptionId:
          type: string
          description: |
            An identifier with the intention of being globally unique.
        timestamp:
          type: string
          description: |
            Date-time stamp. Representation: String formatted according toas defined by the date-time production in IETF RFC 3339.
          format: date-time
        nsInstanceId:
          type: string
          description: |
            An identifier with the intention of being globally unique.
    body_1:
      required:
      - nsInstanceId
      - subscriptionId
      type: object
      properties:
        notificationType:
          type: string
          description: |
            Discriminator for the different notification types. Shall be set to "NsIdentifierDeletionNotification" for this notification type.
          example: NsIdentifierDeletionNotification
        subscriptionId:
          type: string
          description: |
            An identifier with the intention of being globally unique.
        timestamp:
          type: string
          description: |
            Date-time stamp. Representation: String formatted according toas defined by the date-time production in IETF RFC 3339.
          format: date-time
        nsInstanceId:
          type: string
          description: |
            An identifier with the intention of being globally unique.
    NsInstance_monitoringParameter:
      required:
      - id
      - performanceMetric
      type: object
      properties:
        id:
          type: string
          description: |
            An identifier that is unique within a NS descriptor. Representation: string of variable length.
        name:
          type: string
          description: |
            Human readable name of the monitoring parameter, as defined in the NSD.
        performanceMetric:
          type: string
          description: |
            Performance metric that is monitored. This attribute shall contain the related  "Measurement Name" value as defined in clause 7.2 of ETSI GS NFV-IFA 027.
      description: |
        This type represents a monitoring parameter that is tracked by the NFVO, for example,  for auto-scaling purposes. It shall comply with the provisions defined in Table 6.5.3.68-1.
    ErrorResponse_details:
      type: object
      properties:
        code:
          type: string
        target:
          type: string
        message:
          type: string
    NSInstanceSubscription_filter:
      type: object
      properties:
        nsInstanceSubscriptionFilter:
          $ref: '#/components/schemas/nsInstanceSubscriptionFilter'
  responses:
    SuccessResponse:
      description: The request is successfull
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
    DeleteResponse:
      description: The resource has been deleted
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
    BadRequestResponse:
      description: The request is malformed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFoundResponse:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    UnauthorizedResponse:
      description: Unauthorized, Invalid credentials (client or user)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ServerErrorResponse:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  parameters:
    ResourceIdPathParameter:
      name: id
      in: path
      description: Resource id identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    NfvoIdPathParameter:
      name: nfvoId
      in: path
      description: Identifier of a Nfvo
      required: true
      style: simple
      explode: false
      schema:
        type: string
    nsIdPathParameter:
      name: nsInstanceId
      in: path
      description: Identifier of the network service
      required: true
      style: simple
      explode: false
      schema:
        type: string
    NsdIdPathParameter:
      name: nsdInfoId
      in: path
      description: Identifier of the NSD information object associated with the NSD
        to be fetched
      required: true
      style: simple
      explode: false
      schema:
        type: string
    NFVOSearchQueryParameters:
      name: NFVO parameters
      in: query
      description: nfvo identifier
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/NFVO parameters'
    PaginationQueryParameters:
      name: Pagination parameters
      in: query
      description: The parameters are used to create pagination
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/Pagination parameters'
    SubscriptionIdPathParameter:
      name: subscriptionId
      in: path
      description: |
        Identifier of this subscription.
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    CreateNSRequestBody:
      description: Create NS request body
      content:
        application/json:
          schema:
            type: object
            properties:
              nsdId:
                format: uuid
                example: d290f1ee-6c54-4b01-90e6-d701748f0851
              nsName:
                type: string
              nsDescription:
                type: string
    InstantiateNsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InstantiateNsRequest'
        application/yaml:
          schema:
            $ref: '#/components/schemas/InstantiateNsRequest'
    ScaleNSRequestBody:
      description: Scale NS request body
      content:
        application/json:
          schema:
            type: object
            properties:
              scaleType:
                type: string
                enum:
                - SCALE_NS
                - SCALE_VNF
              scaleVnfData:
                type: object
              scaleNsData:
                type: object
    SubscribeNotificationNSDRequestBody:
      description: Create subscription to NSD
      content:
        application/json:
          schema:
            type: object
            properties:
              filter:
                type: object
                description: Input filter for selecting the NSD(s)/PNFD(s) and the
                  related change notifications to subscribe to. This filter can contain
                  information about specific types of changes to subscribe to, or
                  attributes of the NsdInfo/PnfdInfo.
    SubscribeNotificationVNFDRequestBody:
      description: Create subscription to VNFD
      content:
        application/json:
          schema:
            type: object
            properties:
              filter:
                type: object
                description: Filter defining the VNF Packages on which the query applies,
                  based on attributes of VnfPkgInfo
              attributeSelector:
                type: array
                items:
                  type: object
    UpdateNSDRequestBody:
      description: Update NSD put request body
      content:
        application/json:
          schema:
            type: object
    UpdateVNFDRequestBody:
      description: Update VNFD put request body
      content:
        application/json:
          schema:
            type: object
    OnboardNSDRequestBody:
      description: Onboarding new NSD post request body
      content:
        application/json:
          schema:
            required:
            - nsd
            type: object
            properties:
              nsd:
                type: object
                description: Nome
    TerminateNsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TerminateNsRequest'
        application/yaml:
          schema:
            $ref: '#/components/schemas/TerminateNsRequest'
    SubscribeNotificationNSRequestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              filter:
                type: object
                properties:
                  nsInstanceSubscriptionFilter:
                    $ref: '#/components/schemas/nsInstanceSubscriptionFilter'
              callbackUri:
                type: string
                description: |
                  String formatted according to IETF RFC 3986.
